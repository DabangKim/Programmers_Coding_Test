{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPaKqE4pyCbrCEMJ6KXlQrX"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["def solution(board):\n","\n","    # 1의 위치 확인\n","    temp = []\n","    for i in range(len(board)):\n","        for j in range(len(board[i])):\n","            if board[i][j] == 1:\n","                temp.append((i,j))\n","\n","    # 1 주변, 모두 1로 변경\n","    for (m,n) in temp:\n","        if n+1 <= len(board)-1:\n","            board[m][n+1] = 1\n","            if m-1 >= 0:\n","                board[m-1][n+1] = 1\n","            if m+1 <= len(board)-1:\n","                board[m+1][n+1] = 1\n","        if m+1 <= len(board)-1:\n","            board[m+1][n] = 1\n","        if m-1 >= 0:\n","            board[m-1][n] = 1\n","        if n-1 >= 0:\n","            board[m][n-1] = 1\n","            if m-1 >= 0:\n","                board[m-1][n-1] = 1\n","            if m+1 <= len(board)-1:\n","                board[m+1][n-1] = 1\n","\n","    # 답\n","    answer = 0\n","    for a in board:\n","        answer += a.count(0)\n","    return answer"],"metadata":{"id":"fFONueBomHYP","executionInfo":{"status":"ok","timestamp":1736418540365,"user_tz":-540,"elapsed":4,"user":{"displayName":"김민성","userId":"03970322166941322260"}}},"execution_count":21,"outputs":[]},{"cell_type":"code","source":["def solution(board):\n","    n = len(board)\n","    danger = set()\n","    for i, row in enumerate(board):\n","        for j, x in enumerate(row):\n","            if not x:\n","                continue\n","            danger.update((i+di, j+dj) for di in [-1,0,1] for dj in [-1, 0, 1])\n","    return n*n - sum(0 <= i < n and 0 <= j < n for i, j in danger)"],"metadata":{"id":"l57oeQmqnUAO"},"execution_count":null,"outputs":[]}]}